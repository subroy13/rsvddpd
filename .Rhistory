.libPaths()
.libPaths()
install.packages("available")
available::available("rsvddpd")
install.packages("curl")
library(curl)
library(available)
available("rsvddpd")
install.packages("janeaustenr")
available("rsvddpd")
install.packages("tokenizers")
available("rsvddpd")
install.packages("SnowballC")
available("rsvddpd")
load_all()
pkgload::load_all()
rcpparma_hello_world()
rcpparma_hello_world()
pkgload::load_all()
Rsvd(matrix(1:6, nrow = 2, ncol = 3))
Rsvd(matrix(1:6, nrow = 2, ncol = 3), alpha = 0)
sum((1:6)^2)
Rsvd(1:10, alpha = 0)
pkgload::load_all()
Rsvd(matrix(1:6, nrow = 2, ncol = 3), alpha = 0)
x = Rsvd(matrix(1:6, nrow = 2, ncol = 3), alpha = 0)
colSums(x$A^2)
colSums(x$B^2)
sqrt(91)
pkgload::load_all()
x = matrix(1:10, nrow = 2, ncol = 5)
Rsvd(x, alpha = 0.5, maxiter = 10)
pkgload::load_all()
Rsvd(x, alpha = 0.5, maxiter = 10)
y = Rsvd(x, alpha = 0.5, maxiter = 10)
colSums(y$A^2)
colSums(y$B^2)
pkgload::load_all()
y = Rsvd(x, alpha = 0.5, maxiter = 10)
?svd
devtools::document()
devtools::document()
pkgload::load_all()
?Rsvd
X = matrix(1:100, nrow = 25, ncol = 4)
Rsvd(X, alpha = 0.5)$d
devtools::document()
Rsvd(X, alpha = 0.5)$d
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
?Rsvd
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
?Rsvd
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
?Rsvd
?svd
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
?Rsvd
?pois
?poisson
?dpois
?Rsvd
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
?Rsvd
?MASS::rlm
?Rsvd
?RobRSVD::
?RobRSVD
?RobRSVD::RobRSVD
file.path(R.home("doc"), "KEYWORDS")
None
NA
min(1, 10)
NULL
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
devtools::load_all()
?Rsvd
devtools::load_all()
?Rsvd
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
?Rsvd
x = matrix(1:20, nrow = 4, ncol = 5)
Rsvd(x, alpha = 2)
Rsvd(x, alpha = 2, nd = 4)
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
Rsvd(x, alpha = 2)
Rsvd(x, alpha = 2, nd = 23)
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
Rsvd(x, alpha = 2, nd = 23)
Rsvd(x, alpha = 0.3, nd = 1)
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
Rsvd(x, alpha = 0.3, nd = 1)
Rsvd(x, alpha = 0.3, nd = 2)
Rsvd(x, alpha = 0.3, nd = 3)
set.seed(Sys.time())
Sys.time()
?is.finite
indicator <- rbinom(20, size = 1, prob = 0.3)
indicator
X + indicator * 100
x + indicator * 100
indicator <- rep(rbinom(nrow(X), size = 1, prob = proportion), ncol(X))
indicator <- rep(rbinom(nrow(x), size = 1, prob = proportion), ncol(x))
indicator <- rep(rbinom(nrow(x), size = 1, prob = 0.3), ncol(x))
indicator
indicator <- rep(rbinom(nrow(x), size = 1, prob = 0.5), ncol(x))
indicator
x + indicator * 100
indicator <- rep(rbinom(ncol(x), size = 1, prob = 0.5), each = nrow(x))
x + indicator * 100
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
devtools::load_all()
?AddOutlier()
roxygen2::roxygenize(roclets="rd")
?AddOutlier
dim(1:10)
dim(1:10)
?MASS::cov.rob
?glm
?rnormal
?rnorm
Rcpp::compileAttributes()
roxygen2::roxygenize(roclets="rd")
?simSVD
?Rsvd
?AddOutlier
?simSVD
?rsvddpd
roxygen2::roxygenize(roclets="rd")
?AddOutlier
library(devtools)
check()
install.packages("rcmdcheck")
devtools::check()
install.packages("xopen")
devtools::check()
devtools::find_rtools()
?devtools::find_rtools()
Sys.which("make")
Sys.which("make")
Sys.which("make")
Sys.which("make")
Sys.which("make")
devtools::find_rtools()
devtools::check()
?rbinom
?complete.cases
devtools::check()
devtools::check()
devtools::load_all()
x = matrix(1:20, nrow = 2, ncol = 10)
Rsvd(x, alpha = 0.1)
AddOutlier(x, 0.1, 100, seed = 121)
x
AddOutlier(x, 0.1, 100, seed = 121)
AddOutlier(x, 0.1, 100, seed = 121, method = "col")
AddOutlier(x, 0.5, 100, seed = 121, method = "col")
devtools::document()
devtools::document()
roxygen2::roxygenise()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
library(rsvddpd)
?Rsvd
?AddOutlier
x = matrix(1:20, nrow = 2, ncol = 10)
Rsvd(x, alpha = 0.5)
?simSVD
rm(x)
devtools::document()
library(rsvddpd)
x = matrix(1:20, nrow = 2, ncol = 10)
Rsvd(x, alpha = 0.5)
?simSVD
devtools::document()
devtools::check()
devtools::document()
devtools::check()
?Rsvd
usethis::use_vignette("RSVD-intro")
install.packages("whisker")
usethis::use_vignette("RSVD-intro")
?base
library(rsvddpd)
X <- matrix(1:12, nrow = 4, ncol = 3, byrow = TRUE)
X
svd(X)
X[2, 2] <- 100
svd(X)
?Rsvd
Rsvd(X, alpha = 0.3)
Rsvd(X * 1e6, alpha  = 0.3)
Rsvd(X * 1e-6, alpha = 0.3)
X
Y <- X[, c(3, 1, 2)]
Rsvd(Y, alpha = 0.1)
Rsvd(Y, alpha = 1)
?svd
library(microbenchmark)
?microbenchmark
library(pcaMethods)
library(RobRSVD)
install.packages("RobRSVD")
library(RobRSVD)
X <- matrix(1:10, nrow = 2, ncol = 5)
pcaMethods::robustSvd(X)
X <- matrix(1:20, nrow = 5, ncol = 4)
X
pcaMethods::robustSvd(X)
library(rsvddpd)
library(microbenchmark)
X <- matrix(1:12, nrow = 4, ncol = 3, byrow = TRUE)
X
svd(X)
X[2, 2] <- 100
svd(X)
Rsvd(X, alpha = 0.3)
crossprod(Rsvd(X, alpha = 0.3)$u)
crossprod(svd(X)$u)
?simSVD
?contr.poly
contr.poly(10)
contr.poly(10)[, 1:3]
U <- as.matrix(contr.poly(10)[, 1:3])
V <- as.matrix(contr.poly(4)[, 1:3])
crossprod(U)
crossprod(V)
simSVD(trueSVD, svdfun = svd, B = 100, seed = 1234, outlier = FALSE, out_value = 25)
U <- as.matrix(stats::contr.poly(10)[, 1:3])
V <- as.matrix(stats::contr.poly(4)[, 1:3])
trueSVD <- list(d = c(10, 5, 3), u = U, v = V)  # true svd of the data matrix
simSVD(trueSVD, svdfun = svd, B = 100, seed = 1234, outlier = FALSE, out_value = 25)
?MASS::cov.rob
devtools::document()
simSVD(trueSVD, svdfun = svd, B = 100, seed = 1234, outlier = FALSE, out_value = 25)
a <- simSVD(trueSVD, svdfun = svd, B = 100, seed = 1234, outlier = FALSE,
out_value = 25, return_details = TRUE)
a$Simulations$Lambda
colMeans(a$Simulations$Lambda)
colMeans((a$Simulations$Lambda - matrix(c(10, 5, 3), nrow = 100, ncol = 3, byrow = TRUE))^2 )
complete.cases(lambdas)
complete.cases(a$Simulations$Lambda)
devtools::document()
a <- simSVD(trueSVD, svdfun = svd, B = 100, seed = 1234, outlier = FALSE,
out_value = 25, return_details = TRUE)
a$Summary
devtools::load_all()
library(rsvddpd)
library(microbenchmark)
a <- simSVD(trueSVD, svdfun = svd, B = 100, seed = 1234, outlier = FALSE,
out_value = 25, return_details = TRUE)
a$Summary$MSE
a$Simulations$Lambda
devtools::load_all()
a <- simSVD(trueSVD, svdfun = svd, B = 100, seed = 1234, outlier = FALSE, return_details = TRUE)
devtools::load_all()
a <- simSVD(trueSVD, svdfun = svd, B = 100, seed = 1234, outlier = FALSE, return_details = TRUE)
a$Summary
a <- simSVD(trueSVD, svdfun = svd, B = 100, seed = 1234, outlier = FALSE, return_details = TRUE)
simSVD(trueSVD, svdfun = svd, B = 100, seed = 1234, outlier = FALSE, out_value = 25)
simSVD(trueSVD, svdfun = svd, B = 100, seed = 1234, outlier = TRUE, out_value = 25)
rm(list = ls())
devtools::build_vignettes()
library(rsvddpd)
library(rsvddpd)
?simSVD
?vignette
?Rsvd
?rnomr
?rnorm
devtools::document()
devtools::check()
devtools::document()
devtools::check()
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
devtools::document()
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
devtools::check()
devtools::build_vignettes()
devtools::build_vignettes()
?usethis::use_mit_license
usethis::find_name()
usethis::use_mit_license(name = "Subhrajyoty Roy")
devtools::document()
devtools::check()
